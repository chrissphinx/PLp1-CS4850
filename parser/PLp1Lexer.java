// Generated from parser/PLp1.g4 by ANTLR 4.1

  package parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PLp1Lexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		CASE=1, CLASS=2, CREATE=3, DEFAULT=4, ENDIF=5, ELSE=6, FALSE=7, FIRST=8, 
		FUNCTION=9, IF=10, INIT=11, LAMBDA=12, LET=13, METHOD=14, NULL=15, SWITCH=16, 
		THEN=17, TRUE=18, AND=19, ASSIGN=20, COMMA=21, COLON=22, DIVIDE=23, DOT=24, 
		EQUAL=25, GREATER=26, GREATEREQUAL=27, INVOKE=28, LB=29, LBK=30, LESS=31, 
		LESSEQUAL=32, LP=33, MINUS=34, MULTIPLY=35, NOT=36, NOTEQUAL=37, OR=38, 
		PLUS=39, RB=40, RBK=41, REST=42, RP=43, ID=44, INTNUM=45, FLOATNUM=46, 
		STRING=47, NEWLINE=48, WS=49;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'case'", "'class'", "'create'", "'default'", "'endif'", "'else'", "'false'", 
		"'first'", "'function'", "'if'", "'init'", "'lambda'", "'let'", "'method'", 
		"'null'", "'switch'", "'then'", "'true'", "'&'", "'='", "','", "':'", 
		"'/'", "'.'", "'=='", "'>'", "'>='", "'->'", "'{'", "'['", "'<'", "'<='", 
		"'('", "'-'", "'*'", "'!'", "'!='", "'|'", "'+'", "'}'", "']'", "'rest'", 
		"')'", "ID", "INTNUM", "FLOATNUM", "STRING", "NEWLINE", "WS"
	};
	public static final String[] ruleNames = {
		"CASE", "CLASS", "CREATE", "DEFAULT", "ENDIF", "ELSE", "FALSE", "FIRST", 
		"FUNCTION", "IF", "INIT", "LAMBDA", "LET", "METHOD", "NULL", "SWITCH", 
		"THEN", "TRUE", "AND", "ASSIGN", "COMMA", "COLON", "DIVIDE", "DOT", "EQUAL", 
		"GREATER", "GREATEREQUAL", "INVOKE", "LB", "LBK", "LESS", "LESSEQUAL", 
		"LP", "MINUS", "MULTIPLY", "NOT", "NOTEQUAL", "OR", "PLUS", "RB", "RBK", 
		"REST", "RP", "ALPHA", "DIGIT", "ID", "POSITIVE", "INTNUM", "EXPONENT", 
		"FLOATNUM", "STRING", "NEWLINE", "WS"
	};


	public PLp1Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "PLp1.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 51: NEWLINE_action((RuleContext)_localctx, actionIndex); break;

		case 52: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void NEWLINE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\63\u0153\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3"+
		"\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3"+
		"\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3"+
		"\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3"+
		"\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3"+
		"\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3"+
		"\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 "+
		"\3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3"+
		"*\3+\3+\3+\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3/\7/\u0119\n/\f/\16/\u011c\13"+
		"/\3\60\3\60\3\61\3\61\7\61\u0122\n\61\f\61\16\61\u0125\13\61\3\61\5\61"+
		"\u0128\n\61\3\62\3\62\5\62\u012c\n\62\3\62\6\62\u012f\n\62\r\62\16\62"+
		"\u0130\3\63\3\63\3\63\6\63\u0136\n\63\r\63\16\63\u0137\3\63\5\63\u013b"+
		"\n\63\3\64\3\64\7\64\u013f\n\64\f\64\16\64\u0142\13\64\3\64\3\64\3\65"+
		"\5\65\u0147\n\65\3\65\3\65\3\65\3\65\3\66\6\66\u014e\n\66\r\66\16\66\u014f"+
		"\3\66\3\66\2\67\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23"+
		"\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1"+
		"\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1"+
		";\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y\2\1"+
		"[\2\1].\1_\2\1a/\1c\2\1e\60\1g\61\1i\62\2k\63\3\3\2\t\4\2C\\c|\3\2\62"+
		";\3\2\63;\4\2GGgg\4\2--//\3\2))\4\2\13\13\"\"\u0159\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2"+
		"\2\2]\3\2\2\2\2a\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\3"+
		"m\3\2\2\2\5r\3\2\2\2\7x\3\2\2\2\t\177\3\2\2\2\13\u0087\3\2\2\2\r\u008d"+
		"\3\2\2\2\17\u0092\3\2\2\2\21\u0098\3\2\2\2\23\u009e\3\2\2\2\25\u00a7\3"+
		"\2\2\2\27\u00aa\3\2\2\2\31\u00af\3\2\2\2\33\u00b6\3\2\2\2\35\u00ba\3\2"+
		"\2\2\37\u00c1\3\2\2\2!\u00c6\3\2\2\2#\u00cd\3\2\2\2%\u00d2\3\2\2\2\'\u00d7"+
		"\3\2\2\2)\u00d9\3\2\2\2+\u00db\3\2\2\2-\u00dd\3\2\2\2/\u00df\3\2\2\2\61"+
		"\u00e1\3\2\2\2\63\u00e3\3\2\2\2\65\u00e6\3\2\2\2\67\u00e8\3\2\2\29\u00eb"+
		"\3\2\2\2;\u00ee\3\2\2\2=\u00f0\3\2\2\2?\u00f2\3\2\2\2A\u00f4\3\2\2\2C"+
		"\u00f7\3\2\2\2E\u00f9\3\2\2\2G\u00fb\3\2\2\2I\u00fd\3\2\2\2K\u00ff\3\2"+
		"\2\2M\u0102\3\2\2\2O\u0104\3\2\2\2Q\u0106\3\2\2\2S\u0108\3\2\2\2U\u010a"+
		"\3\2\2\2W\u010f\3\2\2\2Y\u0111\3\2\2\2[\u0113\3\2\2\2]\u0115\3\2\2\2_"+
		"\u011d\3\2\2\2a\u0127\3\2\2\2c\u0129\3\2\2\2e\u0132\3\2\2\2g\u013c\3\2"+
		"\2\2i\u0146\3\2\2\2k\u014d\3\2\2\2mn\7e\2\2no\7c\2\2op\7u\2\2pq\7g\2\2"+
		"q\4\3\2\2\2rs\7e\2\2st\7n\2\2tu\7c\2\2uv\7u\2\2vw\7u\2\2w\6\3\2\2\2xy"+
		"\7e\2\2yz\7t\2\2z{\7g\2\2{|\7c\2\2|}\7v\2\2}~\7g\2\2~\b\3\2\2\2\177\u0080"+
		"\7f\2\2\u0080\u0081\7g\2\2\u0081\u0082\7h\2\2\u0082\u0083\7c\2\2\u0083"+
		"\u0084\7w\2\2\u0084\u0085\7n\2\2\u0085\u0086\7v\2\2\u0086\n\3\2\2\2\u0087"+
		"\u0088\7g\2\2\u0088\u0089\7p\2\2\u0089\u008a\7f\2\2\u008a\u008b\7k\2\2"+
		"\u008b\u008c\7h\2\2\u008c\f\3\2\2\2\u008d\u008e\7g\2\2\u008e\u008f\7n"+
		"\2\2\u008f\u0090\7u\2\2\u0090\u0091\7g\2\2\u0091\16\3\2\2\2\u0092\u0093"+
		"\7h\2\2\u0093\u0094\7c\2\2\u0094\u0095\7n\2\2\u0095\u0096\7u\2\2\u0096"+
		"\u0097\7g\2\2\u0097\20\3\2\2\2\u0098\u0099\7h\2\2\u0099\u009a\7k\2\2\u009a"+
		"\u009b\7t\2\2\u009b\u009c\7u\2\2\u009c\u009d\7v\2\2\u009d\22\3\2\2\2\u009e"+
		"\u009f\7h\2\2\u009f\u00a0\7w\2\2\u00a0\u00a1\7p\2\2\u00a1\u00a2\7e\2\2"+
		"\u00a2\u00a3\7v\2\2\u00a3\u00a4\7k\2\2\u00a4\u00a5\7q\2\2\u00a5\u00a6"+
		"\7p\2\2\u00a6\24\3\2\2\2\u00a7\u00a8\7k\2\2\u00a8\u00a9\7h\2\2\u00a9\26"+
		"\3\2\2\2\u00aa\u00ab\7k\2\2\u00ab\u00ac\7p\2\2\u00ac\u00ad\7k\2\2\u00ad"+
		"\u00ae\7v\2\2\u00ae\30\3\2\2\2\u00af\u00b0\7n\2\2\u00b0\u00b1\7c\2\2\u00b1"+
		"\u00b2\7o\2\2\u00b2\u00b3\7d\2\2\u00b3\u00b4\7f\2\2\u00b4\u00b5\7c\2\2"+
		"\u00b5\32\3\2\2\2\u00b6\u00b7\7n\2\2\u00b7\u00b8\7g\2\2\u00b8\u00b9\7"+
		"v\2\2\u00b9\34\3\2\2\2\u00ba\u00bb\7o\2\2\u00bb\u00bc\7g\2\2\u00bc\u00bd"+
		"\7v\2\2\u00bd\u00be\7j\2\2\u00be\u00bf\7q\2\2\u00bf\u00c0\7f\2\2\u00c0"+
		"\36\3\2\2\2\u00c1\u00c2\7p\2\2\u00c2\u00c3\7w\2\2\u00c3\u00c4\7n\2\2\u00c4"+
		"\u00c5\7n\2\2\u00c5 \3\2\2\2\u00c6\u00c7\7u\2\2\u00c7\u00c8\7y\2\2\u00c8"+
		"\u00c9\7k\2\2\u00c9\u00ca\7v\2\2\u00ca\u00cb\7e\2\2\u00cb\u00cc\7j\2\2"+
		"\u00cc\"\3\2\2\2\u00cd\u00ce\7v\2\2\u00ce\u00cf\7j\2\2\u00cf\u00d0\7g"+
		"\2\2\u00d0\u00d1\7p\2\2\u00d1$\3\2\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4"+
		"\7t\2\2\u00d4\u00d5\7w\2\2\u00d5\u00d6\7g\2\2\u00d6&\3\2\2\2\u00d7\u00d8"+
		"\7(\2\2\u00d8(\3\2\2\2\u00d9\u00da\7?\2\2\u00da*\3\2\2\2\u00db\u00dc\7"+
		".\2\2\u00dc,\3\2\2\2\u00dd\u00de\7<\2\2\u00de.\3\2\2\2\u00df\u00e0\7\61"+
		"\2\2\u00e0\60\3\2\2\2\u00e1\u00e2\7\60\2\2\u00e2\62\3\2\2\2\u00e3\u00e4"+
		"\7?\2\2\u00e4\u00e5\7?\2\2\u00e5\64\3\2\2\2\u00e6\u00e7\7@\2\2\u00e7\66"+
		"\3\2\2\2\u00e8\u00e9\7@\2\2\u00e9\u00ea\7?\2\2\u00ea8\3\2\2\2\u00eb\u00ec"+
		"\7/\2\2\u00ec\u00ed\7@\2\2\u00ed:\3\2\2\2\u00ee\u00ef\7}\2\2\u00ef<\3"+
		"\2\2\2\u00f0\u00f1\7]\2\2\u00f1>\3\2\2\2\u00f2\u00f3\7>\2\2\u00f3@\3\2"+
		"\2\2\u00f4\u00f5\7>\2\2\u00f5\u00f6\7?\2\2\u00f6B\3\2\2\2\u00f7\u00f8"+
		"\7*\2\2\u00f8D\3\2\2\2\u00f9\u00fa\7/\2\2\u00faF\3\2\2\2\u00fb\u00fc\7"+
		",\2\2\u00fcH\3\2\2\2\u00fd\u00fe\7#\2\2\u00feJ\3\2\2\2\u00ff\u0100\7#"+
		"\2\2\u0100\u0101\7?\2\2\u0101L\3\2\2\2\u0102\u0103\7~\2\2\u0103N\3\2\2"+
		"\2\u0104\u0105\7-\2\2\u0105P\3\2\2\2\u0106\u0107\7\177\2\2\u0107R\3\2"+
		"\2\2\u0108\u0109\7_\2\2\u0109T\3\2\2\2\u010a\u010b\7t\2\2\u010b\u010c"+
		"\7g\2\2\u010c\u010d\7u\2\2\u010d\u010e\7v\2\2\u010eV\3\2\2\2\u010f\u0110"+
		"\7+\2\2\u0110X\3\2\2\2\u0111\u0112\t\2\2\2\u0112Z\3\2\2\2\u0113\u0114"+
		"\t\3\2\2\u0114\\\3\2\2\2\u0115\u011a\5Y-\2\u0116\u0119\5Y-\2\u0117\u0119"+
		"\5[.\2\u0118\u0116\3\2\2\2\u0118\u0117\3\2\2\2\u0119\u011c\3\2\2\2\u011a"+
		"\u0118\3\2\2\2\u011a\u011b\3\2\2\2\u011b^\3\2\2\2\u011c\u011a\3\2\2\2"+
		"\u011d\u011e\t\4\2\2\u011e`\3\2\2\2\u011f\u0123\5_\60\2\u0120\u0122\5"+
		"[.\2\u0121\u0120\3\2\2\2\u0122\u0125\3\2\2\2\u0123\u0121\3\2\2\2\u0123"+
		"\u0124\3\2\2\2\u0124\u0128\3\2\2\2\u0125\u0123\3\2\2\2\u0126\u0128\7\62"+
		"\2\2\u0127\u011f\3\2\2\2\u0127\u0126\3\2\2\2\u0128b\3\2\2\2\u0129\u012b"+
		"\t\5\2\2\u012a\u012c\t\6\2\2\u012b\u012a\3\2\2\2\u012b\u012c\3\2\2\2\u012c"+
		"\u012e\3\2\2\2\u012d\u012f\5[.\2\u012e\u012d\3\2\2\2\u012f\u0130\3\2\2"+
		"\2\u0130\u012e\3\2\2\2\u0130\u0131\3\2\2\2\u0131d\3\2\2\2\u0132\u0133"+
		"\5a\61\2\u0133\u0135\7\60\2\2\u0134\u0136\5[.\2\u0135\u0134\3\2\2\2\u0136"+
		"\u0137\3\2\2\2\u0137\u0135\3\2\2\2\u0137\u0138\3\2\2\2\u0138\u013a\3\2"+
		"\2\2\u0139\u013b\5c\62\2\u013a\u0139\3\2\2\2\u013a\u013b\3\2\2\2\u013b"+
		"f\3\2\2\2\u013c\u0140\7)\2\2\u013d\u013f\n\7\2\2\u013e\u013d\3\2\2\2\u013f"+
		"\u0142\3\2\2\2\u0140\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u0143\3\2"+
		"\2\2\u0142\u0140\3\2\2\2\u0143\u0144\7)\2\2\u0144h\3\2\2\2\u0145\u0147"+
		"\7\17\2\2\u0146\u0145\3\2\2\2\u0146\u0147\3\2\2\2\u0147\u0148\3\2\2\2"+
		"\u0148\u0149\7\f\2\2\u0149\u014a\3\2\2\2\u014a\u014b\b\65\2\2\u014bj\3"+
		"\2\2\2\u014c\u014e\t\b\2\2\u014d\u014c\3\2\2\2\u014e\u014f\3\2\2\2\u014f"+
		"\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150\u0151\3\2\2\2\u0151\u0152\b\66"+
		"\3\2\u0152l\3\2\2\2\16\2\u0118\u011a\u0123\u0127\u012b\u0130\u0137\u013a"+
		"\u0140\u0146\u014f";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}